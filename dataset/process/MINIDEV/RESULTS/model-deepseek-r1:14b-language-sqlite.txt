SELECT (COUNT(CustomerID) FILTER (WHERE Currency = 'EUR')) / (COUNT(CustomerID) FILTER (WHERE Currency = 'CZK')) AS Ratio FROM customers;
sqlite SELECT CustomerID, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE substr(Date, 0, 4) = '2012' GROUP BY CustomerID ORDER BY TotalConsumption ASC LIMIT 1;
SELECT (SUM(Consumption) / 12) AS AverageMonthlyConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Segment = 'SME' AND substr(Date, 1, 4) = '2013';
sqlite SELECT (SUM(y.Consumption) FILTER (WHERE c.Currency = 'CZK')) - (SUM(y.Consumption) FILTER (WHERE c.Currency = 'EUR')) AS ConsumptionDifference FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date BETWEEN '201201' AND '201212' AND c.Currency IN ('CZK', 'EUR');
SELECT substr(Date, 0, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Currency = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC;
sqlite SELECT substr(Date,5,2) AS Month, SUM(Consumption) AS TotalConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE Segment = 'SME' AND Date BETWEEN '201301' AND '201312' GROUP BY substr(Date,0,4), substr(Date,5,2) ORDER BY TotalConsumption DESC LIMIT 1;
SELECT (sme_avg - lam_avg) AS difference_SME_LAM, (lam_avg - kam_avg) AS difference_LAM_KAM, (kam_avg - sme_avg) AS difference_KAM_SME FROM ( SELECT SUM(CASE WHEN substr(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) / COUNT(DISTINCT c.CustomerID) AS sme_avg, SUM(CASE WHEN substr(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) / COUNT(DISTINCT c.CustomerID) AS lam_avg, SUM(CASE WHEN substr(y.Date, 1, 4) = '2013' THEN y.Consumption ELSE 0 END) / COUNT(DISTINCT c.CustomerID) AS kam_avg FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment IN ('SME', 'LAM', 'KAM') AND substr(y.Date, 1, 4) = '2013' GROUP BY c.Segment ) AS segment_stats;
WITH year_consumption AS ( SELECT substr(Date, 0, 4) as year, Segment, sum(Consumption) as total_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE substr(Date, 0, 4) IN ('2012', '2013') GROUP BY substr(Date, 0, 4), Segment ) SELECT a.Segment, (a.total_consumption - b.total_consumption) as delta, ((a.total_consumption - b.total_consumption) / a.total_consumption * 100) as pct_change FROM year_consumption a JOIN year_consumption b ON a.Segment = b.Segment AND substr(a.year, 0, 4) = '2013' AND substr(b.year, 0, 4) = '2012' WHERE a.Segment IN ('SME', 'LAM', 'KAM');
sqlite SELECT SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';
WITH discount_counts AS ( SELECT Country, COUNT(*) as discount_count FROM gasstations WHERE Segment = 'discount' GROUP BY Country ) SELECT (COALESCE(discount_cze, 0) - COALESCE(discount_svk, 0)) AS more_discount_stations FROM discount_counts WHERE Country IN ('CZE', 'SVK') GROUP BY Country;
SELECT (total_czk - total_eur) AS AmountOfMoreSMEs FROM ( SELECT COALESCE(SUM(t.Amount), 0) AS total_czk, COALESCE(SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount ELSE 0 END), 0) AS total_eur FROM transactions_1k t LEFT JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Segment = 'SME' ) subquery;
WITH lam_consumers AS ( SELECT c.CustomerID, SUM(y.Consumption) as total_consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'LAM' GROUP BY c.CustomerID ) SELECT (COUNT(*) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'LAM')) AS percentage_above_4673 FROM lam_consumers WHERE total_consumption > 46.73;
SELECT (COUNT(*) / (SELECT COUNT(*) FROM customers)) * 100 AS percentage FROM customers c WHERE EXISTS ( SELECT 1 FROM yearmonth ym WHERE ym.CustomerID = c.CustomerID AND ym.Date = '201202' AND ym.Consumption > 528.3 );
SELECT substr(Date,6,2) AS Month, MAX(Consumption) AS MaxConsumption FROM yearmonth WHERE substr(Date,1,4) = '2012' GROUP BY substr(Date,6,2);
sqlite SELECT DISTINCT p.Description FROM products AS p JOIN transactions_1k AS t ON p.ProductID = t.ProductID JOIN yearmonth AS ym ON t.CustomerID = ym.CustomerID WHERE ym.Date = '201309';
SELECT DISTINCT Country FROM gasstations WHERE EXISTS ( SELECT 1 FROM transactions_1k t JOIN yearmonth y ON t.CustomerID = y.CustomerID WHERE substr(y.Date, 5, 2) == '06' AND substr(y.Date, 1, 4) == '2013' AND t.GasStationID = gasstations.GasStationID );
SELECT COUNT(DISTINCT y.CustomerID) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND y.Consumption > 1000;
SELECT p.Description FROM "transactions_1k" AS t LEFT JOIN products AS p ON t.ProductID = p.ProductID LEFT JOIN gasstations AS gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'CZE';
SELECT MIN(t.Time) AS EarliestTime, MAX(t.Time) AS LatestTime FROM transactions_1k t INNER JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.ChainID = 11;
SELECT COUNT(TransactionID) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01';
SELECT Currency FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE Date = '2012-08-24' AND Time = '16:25:00';
sqlite SELECT c.Segment FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-23' AND t.Time = '21:20:00';
SELECT COUNT(*) FROM "transactions_1k" JOIN gasstations ON GasStationID WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND Country = 'CZE';
SELECT customers.Currency AS Nationality FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE Date = '2012-08-24' AND Amount = 548.4;
WITH eur_customers AS ( SELECT COUNT(DISTINCT c.CustomerID) AS cnt FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-25' AND c.Currency = 'EUR' ), total_customers AS ( SELECT COUNT(DISTINCT CustomerID) AS total_cnt FROM transactions_1k WHERE Date = '2012-08-25' ) SELECT (eur_customers.cnt * 100.0 / total_customers.total_cnt) AS percentage FROM eur_customers, total_customers;
WITH customer_id AS ( SELECT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25' ) SELECT (a.Consumption - b.Consumption) / a.Consumption AS decrease_rate FROM yearmonth a JOIN yearmonth b ON a.CustomerID = b.CustomerID WHERE a.Date = '2012-08' AND b.Date = '2013-08' AND a.CustomerID IN (SELECT CustomerID FROM customer_id);
SELECT (total_premium * 100.0 / total_customers) AS premium_percentage FROM ( SELECT COUNT(CASE WHEN c.Segment = 'premium' THEN 1 END) AS total_premium, COUNT(DISTINCT t.CustomerID) AS total_customers FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'SVK' JOIN customers c ON t.CustomerID = c.CustomerID ) subquery;
SELECT t.CustomerID, SUM(CASE WHEN t.TransactionID IS NOT NULL THEN t.Amount ELSE 0 END) AS Total_Spending, SUM(CASE WHEN t.Date = '201201' THEN t.Amount ELSE 0 END) AS January_2012_Spending FROM transactions_1k t WHERE t.CustomerID = 38508 GROUP BY t.CustomerID;
WITH TopCustomer AS ( SELECT CustomerID, SUM(Amount) as TotalAmount FROM transactions_1k GROUP BY CustomerID ORDER BY TotalAmount DESC LIMIT 1 ) SELECT c.CustomerID, (SUM(t.Price) / SUM(t.Amount)) as AveragePricePerItem, c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.CustomerID IN ( SELECT CustomerID FROM TopCustomer ) GROUP BY c.CustomerID;
SELECT ym.CustomerID, ym.Date, ym.Consumption FROM yearmonth AS ym WHERE ym.Date = '201208' AND ym.CustomerID IN ( SELECT t.CustomerID FROM transactions_1k AS t WHERE t.ProductID = 5 AND (t.Price / t.Amount) > 29.00 );
SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';

SELECT count(*) FROM singer
SELECT count(*) FROM singer
SELECT Name,  Country,  Age FROM singer ORDER BY Age DESC
SELECT Name,  Country,  Age FROM singer ORDER BY Age DESC
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT AVG(Age), MIN(Age), MAX(Age) FROM singer WHERE Country = 'France'
SELECT Name,  Song_release_year FROM singer WHERE Age  =  (SELECT min(Age) FROM singer)
SELECT singer.Name, singer.Song_release_year FROM singer WHERE singer.Age = (SELECT MIN(singer.Age) FROM singer);
SELECT DISTINCT s.Country FROM singer AS s WHERE s.Age > 20
SELECT DISTINCT Country FROM singer WHERE Age > 20
SELECT Country,  count(*) FROM singer GROUP BY Country
SELECT Country,  COUNT(*) FROM singer GROUP BY Country
SELECT T2.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age > (SELECT AVG(Age) FROM singer);
SELECT T2.Song_Name FROM singer AS T1 JOIN concert_singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T1.Age  >  (SELECT avg(Age) FROM singer)
SELECT Location,  Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000
SELECT Location,  Name FROM station WHERE Capacity BETWEEN 5000 AND 10000
SELECT max(Capacity),  avg(Capacity) FROM stadium
SELECT avg(Capacity),  max(Capacity) FROM stadium
SELECT T1.Name,  T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Stadium_ID ORDER BY avg(T2.concert_ID) DESC LIMIT 1
SELECT Name,  Capacity FROM stadium ORDER BY Average DESC LIMIT 1
SELECT count(*) FROM concert WHERE Year  =  2014 OR Year  =  2015
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT Name, COUNT(*) FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY Name
SELECT T1.Name,  count(*) FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID GROUP BY T1.Name
SELECT T1.Name, T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  >=  2014 GROUP BY T1.Stadium_ID ORDER BY count(*) DESC LIMIT 1
SELECT 
SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1
SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)
SELECT Country FROM singer WHERE Age  >  40 INTERSECT SELECT Country FROM singer WHERE Age  <  30
SELECT Name FROM stadium EXCEPT SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014
SELECT Name FROM stadium EXCEPT SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  2014
SELECT T1.concert_Name,  T1.Theme,  count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID
SELECT T1.concert_Name,  T1.Theme,  COUNT(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID GROUP BY T1.concert_ID
SELECT T2.Name,  COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T2.Name
SELECT Singer_ID, Name, COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY Singer_ID
SELECT T2.Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID  =  T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID  =  T3.Singer_ID WHERE T1.Year  =  2014
SELECT T2.Name FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID JOIN singer AS T3 ON T2.Singer_ID = T3.Singer_ID WHERE T1.Year = 2014
SELECT singer.Name, singer.Country FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID JOIN song ON concert.concert_ID = song.concert_ID WHERE song.Song_Name LIKE '%Hey%'
SELECT s.Name, s.Country FROM singer AS s JOIN song AS so ON s.Singer_ID = so.Singer_ID WHERE so.Song_Name LIKE "%Hey%"
SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  '2014' INTERSECT SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID  =  T2.Stadium_ID WHERE T2.Year  =  '2015'
SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2014 INTERSECT SELECT T1.Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2015 
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT count(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1)
SELECT count(*) FROM Pets WHERE weight > 10
SELECT count(*) FROM Pets WHERE weight > 10
SELECT MIN(weight) FROM Pets WHERE PetType = 'Dog'
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog'
SELECT max(weight),  PetType FROM Pets GROUP BY PetType
SELECT max(weight), PetType FROM Pets GROUP BY PetType
SELECT count(*) FROM Student WHERE Age > 20 AND StuID IN (SELECT StuID FROM Has_Pet)
SELECT COUNT(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T1.Sex  =  "F" AND T3.PetType  =  "Dog"
SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T1.Sex  =  "F" AND T3.PetType  =  "Dog"
SELECT count(DISTINCT PetType) FROM Pets
SELECT count(DISTINCT PetType) FROM Pets
SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = "cat" OR T3.PetType = "dog"
SELECT T1.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = "cat" OR T3.PetType = "dog"
SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = "cat" INTERSECT SELECT Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = "dog"
SELECT T2.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetType  =  'cat' INTERSECT SELECT T2.Fname FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID WHERE T2.PetType  =  'dog'
SELECT major, age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetType = "Cat")
SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetType = 'cat')
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetType = 'Cat')
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = 'dog') AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetType = 'cat') 
SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = 'dog') EXCEPT SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetType = 'cat')
SELECT T1.PetType,  T1.weight FROM Pets AS T1 JOIN Has_Pet AS T2 ON T1.PetID  =  T2.PetID ORDER BY T1.pet_age ASC LIMIT 1
SELECT PetType, weight FROM Pets ORDER BY pet_age DESC LIMIT 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetID, weight FROM Pets WHERE pet_age > 1
SELECT PetType, AVG(pet_age), MAX(pet_age) FROM Pets GROUP BY PetType
SELECT avg(Age),  max(Age),  PetType FROM Pets GROUP BY PetType
SELECT PetType,  avg(weight) FROM Pets GROUP BY PetType;
SELECT PetType,  avg(weight) FROM Pets GROUP BY PetType
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT Fname, Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet)
SELECT T1.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = "Smith"
SELECT T1.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.LName = 'Smith'
SELECT T1.StuID, count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID
SELECT T1.StuID,  count(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID
SELECT T1.Fname, T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1
SELECT T1.Fname,  T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID HAVING count(*)  >  1
SELECT T2.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID  =  T2.StuID JOIN Pets AS T3 ON T2.PetID  =  T3.PetID WHERE T3.PetType  =  "cat" AND T3.pet_age  =  3
SELECT LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = "cat" AND Pets.pet_age = 3
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)
SELECT count(*) FROM continents
SELECT count(*) FROM continents
SELECT T1.ContId,  T1.Continent,  count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId
SELECT T1.ContId,  T1.Continent, COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId
SELECT count(*) FROM countries
SELECT count(*) FROM countries
SELECT FullName, Id, COUNT(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id
SELECT FullName,  Id,  COUNT(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id
SELECT Model FROM cars_data ORDER BY Horsepower ASC LIMIT 1
SELECT Model FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT Model FROM cars_data WHERE Weight < (SELECT avg(Weight) FROM cars_data)
SELECT Model FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data)
SELECT DISTINCT Maker FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Year = 1970
SELECT DISTINCT T1.Maker FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  1970
SELECT T1.Make,  T1.Production_year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId ORDER BY T1.Production_year ASC LIMIT 1
SELECT Maker,  Year FROM cars_data ORDER BY Year ASC LIMIT 1
SELECT DISTINCT Model FROM cars_data WHERE Year > 1980
SELECT DISTINCT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Year  >  1980
SELECT continents.Continent, COUNT(*) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent
SELECT T1.Continent,  count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.Continent
SELECT CountryName FROM countries GROUP BY CountryName ORDER BY count(*) DESC LIMIT 1
SELECT CountryName FROM countries GROUP BY CountryName ORDER BY count(*) DESC LIMIT 1
SELECT COUNT(*),  T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.FullName
SELECT Maker,  count(*),  Id,  FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY Maker
SELECT accelerate FROM cars_data WHERE Make = "amc hornet sportabout" AND Model = "sw"
SELECT accelerate FROM cars_data WHERE Make = "amc hornet sportabout" AND Model = "sw";
SELECT count(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T2.Continent  =  "France"
SELECT COUNT(*) FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country  =  T2.CountryId WHERE T2.Continent  =  "Europe" AND T2.CountryName  =  "France"
SELECT COUNT(DISTINCT Model) FROM car_names AS T1 JOIN car_makers AS T2 ON T1.Make = T2.Id JOIN countries AS T3 ON T2.Country = T3.CountryId WHERE T3.Country = 'USA';
SELECT COUNT(DISTINCT Model) FROM car_names WHERE Make IN (SELECT Maker FROM car_makers WHERE Country = 'USA');
SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  4
SELECT avg(MPG) FROM cars_data WHERE Cylinders  =  4
SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974
SELECT 
SELECT Maker,  Model FROM model_list
SELECT Maker,  Model FROM model_list
SELECT CountryName, CountryId FROM countries WHERE CountryId IN (SELECT Country FROM car_makers)
SELECT CountryName, CountryId FROM countries AS T1 JOIN car_makers AS T2 ON T1.Continent = T2.Continent GROUP BY CountryName, CountryId HAVING COUNT(*) >= 1
SELECT count(*) FROM cars_data WHERE Horsepower  >  150
SELECT count(*) FROM cars_data WHERE Horsepower > 150
SELECT avg(Weight),  Year FROM cars_data GROUP BY Year
SELECT avg(Weight),  Year FROM cars_data GROUP BY Year
SELECT T1.CountryName FROM countries AS T1 JOIN car_makers AS T2 ON T1.Continent  =  T2.Continent GROUP BY T1.CountryName HAVING count(*)  >=  3
SELECT name  FROM countries  WHERE Continent = 'Europe'  GROUP BY name  HAVING COUNT(*) >= 3 
SELECT max(Horsepower),  Maker FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.ModelId WHERE T2.Cylinders  =  3
SELECT max(Horsepower),  Maker FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.ModelId WHERE T2.Cylinders  =  3
SELECT Model,  max(MPG) FROM cars_data GROUP BY Model
SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1
SELECT avg(Horsepower) FROM cars_data WHERE Year < 1980
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980
SELECT avg(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T3.ModelId  =  T2.ModelId WHERE T3.Model  =  "volvo"
SELECT AVG(Edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId JOIN model_list AS T3 ON T2.Model  =  T3.Model JOIN car_makers AS T4 ON T3.Maker  =  T4.Id WHERE T4.Maker  =  "Volvo"
SELECT max(Accelerate),  Cylinders FROM cars_data GROUP BY Cylinders
SELECT max(Accelerate) FROM cars_data GROUP BY Cylinders
SELECT Model FROM car_names GROUP BY Model ORDER BY COUNT(*) DESC LIMIT 1
SELECT Model,  count(*) FROM car_names GROUP BY Model ORDER BY count(*) DESC LIMIT 1
SELECT count(*) FROM cars_data WHERE Cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980
SELECT COUNT(DISTINCT Model) FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.Id WHERE T1.FullName  =  "American Motor Company"
SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker WHERE T1.Maker  =  "American Motor Company"
SELECT FullName, Id FROM car_makers GROUP BY FullName HAVING COUNT(*) > 3
SELECT Maker, Id FROM car_makers GROUP BY Maker HAVING count(*)  >  3
SELECT DISTINCT T1.Model FROM model_list AS T1 JOIN car_makers AS T2 ON T1.Maker  =  T2.Id WHERE T2.FullName  =  "General Motors" OR T1.Weight  >  3500
SELECT DISTINCT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE FullName = 'General Motors') OR Weight > 3500
SELECT DISTINCT T1.Year FROM CARs_data AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Weight  >=  3000 AND T1.Weight  <=  4000
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000 
SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE Model = "volvo" ORDER BY Accelerate ASC LIMIT 1
SELECT Cylinders FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  "volvo" ORDER BY Accelerate LIMIT 1
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data ORDER BY Horsepower DESC LIMIT 1); 
SELECT count(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*) FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 2)
SELECT count(*) FROM (SELECT * FROM car_makers GROUP BY Country HAVING count(*)  >  2)
SELECT count(*) FROM cars_data WHERE Cylinders > 6
SELECT count(*) FROM cars_data WHERE Cylinders > 6
SELECT T1.Model FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.ModelId WHERE T1.Cylinders  =  4 ORDER BY T1.Horsepower DESC LIMIT 1
SELECT T1.Model FROM car_names AS T1 JOIN cars_data AS T2 ON T1.Id  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.Horsepower DESC LIMIT 1
SELECT 
SELECT MakeId,  Make FROM car_names WHERE Model NOT IN (SELECT Model FROM car_names WHERE Horsepower = (SELECT MIN(Horsepower) FROM car_names)) AND Cylinders < 4
SELECT max(T1.MPG) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Cylinders  =  8 OR T1.Year  <  1980
SELECT max(T1.MPG) FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.ModelId WHERE T2.Maker  =  "BMW" AND (T1.Cylinders  =  8 OR T1.Year  <  1980)
SELECT Model FROM model_list WHERE ModelId IN (SELECT MakeId FROM car_names WHERE Make = 'Ford Motor Company') INTERSECT SELECT Model FROM model_list WHERE Weight < 3500
SELECT DISTINCT Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN car_makers AS T3 ON T2.Make = T3.Maker WHERE T1.Weight < 3500 AND T3.Maker!= 'Ford Motor Company'
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers)
SELECT T1.Id,  T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id,  T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3
SELECT Id, Maker FROM car_makers GROUP BY Maker HAVING COUNT(Model) >= 2 AND COUNT(Id) > 3;
SELECT  	c.Continent,  	c.CountryName,  	c.CountryId FROM  	countries c JOIN  	car_makers m ON c.CountryId = m.Country JOIN  	model_list ml ON m.Id = ml.Maker WHERE  	( 		(SELECT COUNT(*) FROM car_makers WHERE Country = c.CountryId) > 3 		OR 		(SELECT COUNT(*) FROM model_list WHERE Model = 'fiat') > 0 	) 
SELECT   The SQL query to answer this question is:  SELECT   This query selects the country id and name from the countries table where the country has more than 3 car makers or produces a fiat model. The query uses the COUNT function to count the number of car makers for each country and the IN operator to check if the country produces a fiat model. The WHERE clause filters the results to only include countries that meet either of these criteria.
SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "JetBlue Airways"
SELECT T1.Country FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Jetblue Airways"
SELECT Abbreviation FROM airlines WHERE Airline  =  "JetBlue Airways"
SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways"
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA"
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA"
SELECT AirportCode, AirportName FROM airports WHERE City = "Anthony"
SELECT AirportCode, AirportName FROM airports WHERE City  =  "Anthony"
SELECT count(*) FROM airlines
SELECT count(*) FROM airlines
SELECT count(*) FROM airports
SELECT count(*) FROM airports
SELECT count(*) FROM Flight
SELECT count(*) FROM flights
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT count(*) FROM airlines WHERE Country  =  'USA'
SELECT count(*) FROM airlines WHERE Country  =  'USA'
SELECT City, Country FROM airports WHERE AirportCode = 'Alton'
SELECT City, Country FROM airports WHERE AirportCode = "Alton"
SELECT AirportName FROM airports WHERE AirportCode = "AKO"
SELECT AirportName FROM airports WHERE AirportCode = 'AKO'
SELECT AirportName FROM airports WHERE City  =  "Aberdeen"
SELECT AirportName FROM airports WHERE City  =  "Aberdeen"
SELECT count(*) FROM flights WHERE SourceAirport  =  'APG'
SELECT count(*) FROM flights WHERE SourceAirport  =  "APG"
SELECT COUNT(*) FROM flights WHERE DestAirport = "ATO"
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportName  =  "ATO"
SELECT count(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = "Aberdeen")
SELECT count(*) FROM flights WHERE SourceAirport  =  "Aberdeen"
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  'Aberdeen'
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
SELECT count(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = "Aberdeen") AND DestAirport = (SELECT AirportCode FROM airports WHERE City = "Ashley")
SELECT COUNT(*) FROM flights WHERE SourceAirport = "Aberdeen" AND DestAirport = "Ashley"
SELECT COUNT(*) FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways')
SELECT COUNT(*) FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = "Jetblue Airways")
SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = "United Airlines" AND T1.DestAirport = "ASY";
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportName  =  "ASY Airport" AND T1.Airline  =  (SELECT uid FROM airlines WHERE Airline  =  "United Airlines")
SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines" AND T1.SourceAirport  =  "AHD"
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.AirportCode  =  "AHD" AND T1.Airline  =  (SELECT uid FROM airlines WHERE Airline  =  "United Airlines")
SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  'United Airlines' AND T1.DestAirport  =  'Aberdeen'
SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  'United Airlines' AND T1.DestAirport  =  'aberdeen'
SELECT T1.City FROM Airports AS T1 JOIN Flights AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
SELECT T1.City FROM airports AS T1 JOIN flights AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.City FROM Airports AS T1 JOIN Flights AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
SELECT SourceAirport, COUNT(*) FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1
SELECT AirportCode FROM flights GROUP BY AirportCode ORDER BY COUNT(*) DESC LIMIT 1
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY count(*) DESC LIMIT 1
SELECT AirportCode FROM flights GROUP BY AirportCode ORDER BY count(*) ASC LIMIT 1
SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) ASC LIMIT 1
SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) DESC LIMIT 1
SELECT Airline,  COUNT(*) FROM flights GROUP BY Airline ORDER BY COUNT(*) DESC LIMIT 1
SELECT Abbreviation, Country FROM airlines ORDER BY COUNT(*) LIMIT 1; 
SELECT A.Abbreviation, A.Country FROM airlines AS A JOIN flights AS F ON A.uid = F.Airline GROUP BY A.uid ORDER BY COUNT(*) ASC LIMIT 1; 
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  'AHD'
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
SELECT Airline FROM flights WHERE SourceAirport = 'APG' INTERSECT SELECT Airline FROM flights WHERE DestAirport = 'CVO'
SELECT Airline FROM flights WHERE SourceAirport = 'APG' INTERSECT SELECT Airline FROM flights WHERE SourceAirport = 'CVO'
SELECT Airline FROM flights WHERE SourceAirport = 'CVO' EXCEPT SELECT Airline FROM flights WHERE SourceAirport = 'APG'
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
SELECT Airline FROM flights GROUP BY Airline HAVING count(*)  >=  10
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >=  10
SELECT Airline FROM flights GROUP BY Airline HAVING count(*)  <  200
SELECT T1.Airline FROM airlines AS T1 JOIN flights AS T2 ON T1.uid = T2.Airline GROUP BY T1.uid HAVING count(*)  <  200
SELECT T1.FlightNo FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline  =  "United Airlines"
SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  "United Airlines"
SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.AirportName  =  "APG"
SELECT FlightNo FROM flights WHERE SourceAirport = "APG";
SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportName  =  "APG"
SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.AirportName  =  'APG'
SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
SELECT FlightNo FROM flights WHERE SourceAirport = "ABZ";
SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
SELECT T1.FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen" OR T2.City  =  "Abilene"
SELECT count(*) FROM flights WHERE DestAirport  =  "ABR" OR DestAirport  =  "ABI"
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)
SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)
SELECT count(*) FROM employee
SELECT count(*) FROM employee
SELECT Name FROM employee ORDER BY Age ASC
SELECT Name FROM employee ORDER BY Age ASC
SELECT COUNT(*), City FROM employee GROUP BY City
SELECT City, COUNT(*) FROM employee GROUP BY City
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING count(*) > 1
SELECT T1.City FROM employee AS T1 JOIN hiring AS T2 ON T1.Employee_ID  =  T2.Employee_ID WHERE T1.Age  <  30 GROUP BY T1.City HAVING COUNT(*)  >  1
SELECT count(*),  Location FROM shop GROUP BY Location
SELECT Location,  COUNT(*) FROM shop GROUP BY Location
SELECT t1.Manager_name, t1.District FROM shop AS t1 JOIN hiring AS t2 ON t1.Shop_ID  =  t2.Shop_ID WHERE t1.Number_products  =  ( SELECT max(Number_products) FROM shop)
SELECT t1.Manager_name, t1.District FROM shop AS t1 JOIN hiring AS t2 ON t1.Shop_ID  =  t2.Shop_ID GROUP BY t1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT min(Number_products),  max(Number_products) FROM shop
SELECT 
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC
SELECT T1.Name,  T1.Location,  T1.District FROM shop AS T1 ORDER BY T1.Number_products DESC
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop) 
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop)
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID  =  T2.Employee_ID GROUP BY T1.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1
SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID  =  T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
SELECT Name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
SELECT Name FROM shop WHERE Shop_ID IN ( SELECT Shop_ID FROM hiring GROUP BY Shop_ID ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT t1.Name FROM shop AS t1 JOIN hiring AS t2 ON t1.Shop_ID  =  t2.Shop_ID GROUP BY t1.Name ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)
SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number of employees hired in each shop; show the shop name as well. */ SELECT   FROM   GROUP BY   /* Answer the following: Find the number
SELECT T1.Shop_ID,  T1.Name,  count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID
SELECT sum(Bonus) FROM evaluation
SELECT sum(Bonus) FROM evaluation
SELECT * FROM hiring
SELECT * FROM hiring
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000  /* Answer the following: Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops. */ SELECT name,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10  /* Answer the following: How many universities have a location that contains NY? */ SELECT count(*) FROM university WHERE LOCATION LIKE "%NY%"  /* Answer the following: Which major has between 2 and 30 number of students? List major and the number of students. */ SELECT Major,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;  /* Answer the following: Which membership card has more than 5 members? */ SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5  /* Answer the following: Which police forces operate in both counties that are located in the East and in the West? */ SELECT Police_force FROM county_public_safety WHERE LOCATION  =  "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  "West"  /* Answer the following: Which nations have both hosts of age above 45 and hosts of age below 35? */ SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35  /* Answer the following: Which states have more than 2 parks? */ SELECT state FROM park GROUP BY state HAVING count(*)  >  2;
SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   /* Answer the following: Find the number of employees who are full-time employees in the shop that has the most number of employees. */ SELECT   
SELECT count(DISTINCT Location) FROM shop
SELECT 
SELECT count(*) FROM Documents
SELECT count(*) FROM Documents
SELECT 
SELECT Document_ID,  Document_Name,  Document_Description FROM Documents
SELECT Document_Name,  Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT Document_Name, Template_ID FROM Documents WHERE Document_Description LIKE '%w%'
SELECT T1.Document_ID, T1.Template_ID, T1.Document_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T1.Document_Name  =  "Robbin CV"
SELECT Document_ID, Template_ID, Document_Description FROM Documents WHERE Document_Name = "Robbin CV"
SELECT count(DISTINCT Template_Type_Code) FROM Templates
SELECT count(DISTINCT Template_Type_Code) FROM Templates
SELECT count(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code  =  'PPT')
SELECT count(*) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "PPT"
SELECT Template_ID,  COUNT(*) FROM Documents GROUP BY Template_ID
SELECT Template_ID,  COUNT(*) FROM Documents GROUP BY Template_ID
SELECT T1.Template_ID,  T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID ORDER BY count(*) DESC LIMIT 1
SELECT Template_Type_Code,  count(*) FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING count(*)  >  1
SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(*)  >  1
SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents)
SELECT count(*) FROM Templates
SELECT count(*) FROM Templates
SELECT Template_ID,  Version_Number,  Template_Type_Code FROM Templates
SELECT Template_ID,  Version_Number,  Template_Type_Code FROM Templates
SELECT DISTINCT Template_Type_Code FROM Templates
SELECT Template_Type_Code FROM Ref_Template_Types
SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'
SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')
SELECT count(*) FROM Templates WHERE Template_Type_Code  =  "CV"
SELECT count(*) FROM Templates WHERE Template_Type_Code  =  "CV"
SELECT T1.Version_Number,  T1.Template_Type_Code FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T1.Version_Number  >  5
SELECT Version_Number,  Template_Type_Code FROM Templates WHERE Version_Number  >  5
SELECT Template_Type_Code,  count(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code,  count(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*)  <  3
SELECT 
SELECT MIN(Version_Number), Template_Type_Code FROM Templates;
SELECT MIN(Version_Number),  Template_Type_Code FROM Templates GROUP BY Template_Type_Code
SELECT 
SELECT Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Document_Name  =  "Data base"
SELECT Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  "BK"
SELECT Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = "BK"
SELECT Template_Type_Code, COUNT(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code,  count(*) FROM Templates GROUP BY Template_Type_Code
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates)
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates)
SELECT Template_Type_Code,  Template_Type_Description FROM Ref_Template_Types
SELECT Template_Type_Code,  Template_Type_Description FROM Ref_Template_Types
SELECT 
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code  =  "AD"
SELECT 
SELECT 
SELECT DISTINCT Template_Type_Description FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID
SELECT DISTINCT Template_Type_Description FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code
SELECT Template_ID FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code  =  T2.Template_Type_Code WHERE T2.Template_Type_Description  =  "Presentation"
SELECT Template_ID FROM Templates WHERE Template_Type_Description = 'Presentation'
SELECT count(*) FROM Paragraphs;
SELECT count(*) FROM Paragraphs
SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T2.Document_Name  =  "Summer Show"
SELECT count(*) FROM Paragraphs AS t1 JOIN Documents AS t2 ON t1.Document_ID  =  t2.Document_ID JOIN Templates AS t3 ON t2.Template_ID  =  t3.Template_ID WHERE t2.Document_Name  =  "Summer Show"
SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'
SELECT Paragraph_ID,  Paragraph_Text FROM Paragraphs WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')
SELECT Paragraph_ID, Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = 'Welcome to NY';
SELECT T3.Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID JOIN Templates AS T3 ON T2.Template_ID  =  T3.Template_ID WHERE T2.Document_Name  =  "Customer reviews"
SELECT T2.Paragraph_Text FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID WHERE T1.Document_Name  =  'Customer reviews'
SELECT Document_ID, COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT Document_ID,  COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID
SELECT T1.Document_ID,  T1.Document_Name,  COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID
SELECT T1.Document_ID,  T1.Document_Name,  count(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*)  >=  2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING count(*)  >=  2
SELECT Document_ID, Document_Name, count(*) FROM Paragraphs GROUP BY Document_ID, Document_Name ORDER BY count(*) DESC LIMIT 1
SELECT T1.Document_ID,  T1.Document_Name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID  =  T2.Document_ID GROUP BY T1.Document_ID ORDER BY count(*) DESC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) BETWEEN 1 AND 2
SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text  =  "Brazil" INTERSECT SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text  =  "Ireland"
SELECT 
SELECT count(*) FROM teacher
SELECT count(*) FROM teacher
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Name FROM teacher ORDER BY Age ASC
SELECT Age,  Hometown FROM teacher
SELECT Age,  Hometown FROM teacher
SELECT Name FROM teacher WHERE Hometown!= " Little Lever Urban District "
SELECT T2.Name FROM teacher AS T1 JOIN people AS T2 ON T1.Teacher_ID  =  T2.People_ID WHERE T2.Hometown!= "Little Lever Urban District" 
SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
SELECT 
SELECT Hometown FROM teacher ORDER BY Age DESC LIMIT 1
SELECT Hometown,  COUNT(*) FROM teacher GROUP BY Hometown
SELECT Hometown,  COUNT(*) FROM teacher GROUP BY Hometown
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT T2.Hometown FROM teacher AS T1 JOIN people AS T2 ON T1.Teacher_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2 
SELECT T2.Name, T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID = T3.Course_ID
SELECT T2.Name,  T3.Course FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T2.Course_ID  =  T3.Course_ID
SELECT T2.Name,  T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID  =  T3.Course_ID ORDER BY T2.Name
SELECT T2.Name, T3.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID JOIN course AS T3 ON T1.Course_ID  =  T3.Course_ID ORDER BY T2.Name
SELECT T2.Name FROM course AS T1 JOIN teacher AS T2 ON T1.Course_ID  =  T2.Teacher_ID WHERE T1.Course  =  'Math'
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Course = "math"
SELECT T1.Name,  COUNT(*) FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T1.Name
SELECT T2.Name,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
SELECT T2.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Teacher_ID HAVING COUNT(*)  >=  2
SELECT Name FROM teacher EXCEPT SELECT T2.Name FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID
SELECT Name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange)
SELECT count(*) FROM visitor WHERE Age < 30
SELECT Name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
SELECT avg(T1.Age) FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T1.Level_of_membership  <=  4
SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1
SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < 2009
SELECT Open_Year,  Num_of_Staff FROM museum WHERE Name  =  "Plaza Museum"
SELECT Name FROM museum WHERE Num_of_Staff > (SELECT min(Num_of_Staff) FROM museum WHERE Open_Year > 2010) 
SELECT T1.ID,  T1.Name,  T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID GROUP BY T1.ID HAVING COUNT(*)  >  1
SELECT visitor_ID, Name, Level_of_membership, SUM(Total_spent) as Total_spent FROM visit GROUP BY visitor_ID ORDER BY Total_spent DESC LIMIT 1 
SELECT T1.Museum_ID,  T1.Name FROM museum AS T1 JOIN visit AS T2 ON T1.Museum_ID  =  T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY count(*) DESC LIMIT 1
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)
SELECT T1.Name, T1.Age FROM Visitor AS T1 JOIN Visit AS T2 ON T1.ID = T2.Visitor_ID GROUP BY T1.ID ORDER BY SUM(T2.Num_of_Ticket) DESC LIMIT 1
SELECT avg(T1.Num_of_Ticket),  max(T1.Num_of_Ticket) FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID  =  T2.Museum_ID
SELECT sum(T1.Total_spent) FROM visit AS T1 JOIN visitor AS T2 ON T1.visitor_ID  =  T2.ID WHERE T2.Level_of_membership  =  1
SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  <  2009) INTERSECT SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID  =  T2.visitor_ID WHERE T2.Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year  >  2011)
SELECT count(*) FROM visitor WHERE ID NOT IN ( SELECT visitor_ID FROM visit WHERE Museum_ID IN ( SELECT Museum_ID FROM museum WHERE Open_Year > 2010 ) )
SELECT count(*) FROM museum WHERE Open_Year > 2013 OR Open_Year < 2008
SELECT count(*) FROM players
SELECT count(*) FROM players
SELECT count(*) FROM matches
SELECT count(*) FROM matches
SELECT first_name, birth_date FROM players WHERE country_code = "USA"
SELECT first_name,  birth_date FROM players WHERE country_code  =  'USA'
SELECT avg(loser_age),  avg(winner_age) FROM matches
SELECT avg(loser_age),  avg(winner_age) FROM matches
SELECT avg(winner_rank) FROM matches
SELECT avg(winner_rank) FROM matches
SELECT max(loser_rank) FROM matches
SELECT max(loser_rank) FROM matches
SELECT count(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players
SELECT count(DISTINCT loser_name) FROM matches
SELECT count(DISTINCT loser_name) FROM matches
SELECT T1.tourney_name FROM matches AS T1 GROUP BY T1.tourney_name HAVING count(*)  >  10
SELECT T1.tourney_name FROM matches AS T1 JOIN rankings AS T2 ON T1.tourney_id  =  T2.tourney_id GROUP BY T1.tourney_name HAVING count(*)  >  10
SELECT 
SELECT winner_name FROM matches WHERE year = 2013 INTERSECT SELECT winner_name FROM matches WHERE year = 2016
SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016
SELECT count(*) FROM matches WHERE tourney_date BETWEEN '2013-01-01' AND '2013-12-31' OR tourney_date BETWEEN '2016-01-01' AND '2016-12-31'
SELECT country_code,  first_name FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name  =  "WTA Championships" INTERSECT SELECT winner_id FROM matches WHERE tourney_name  =  "Australian Open")
SELECT first_name, country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = "WTA Championships" INTERSECT SELECT winner_id FROM matches WHERE tourney_name = "Australian Open")
SELECT first_name, country_code FROM players WHERE age  =  (SELECT max(age) FROM players)
SELECT first_name,  country_code FROM players ORDER BY birth_date LIMIT 1
SELECT first_name, last_name FROM players ORDER BY birth_date
SELECT first_name, last_name FROM players ORDER BY birth_date
SELECT first_name,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
SELECT first_name,  last_name FROM players WHERE hand  =  "L" ORDER BY birth_date
SELECT T1.first_name,  T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
SELECT first_name,  country_code FROM players ORDER BY tours DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY count(*) DESC LIMIT 1
SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.first_name,  T1.last_name,  T1.ranking_points FROM rankings AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
SELECT winner_name, winner_rank_points FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches) 
SELECT winner_name, loser_name FROM matches ORDER BY minutes DESC LIMIT 1
SELECT avg(T1.ranking),  T2.first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.first_name
SELECT first_name, avg(ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id
SELECT sum(ranking_points),  first_name FROM rankings AS T1 JOIN players AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id
SELECT first_name, SUM(ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY first_name
SELECT count(*),  country_code FROM players GROUP BY country_code
SELECT country, COUNT(*) FROM players GROUP BY country;
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
SELECT ranking_date, sum(tours) FROM rankings GROUP BY ranking_date
SELECT ranking_date, COUNT(*) FROM rankings GROUP BY ranking_date
SELECT COUNT(*), year FROM matches GROUP BY year
SELECT year, COUNT(*) FROM matches GROUP BY year
SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /* Answer the following: Find the name and rank of the 3 youngest winners across all matches. */ SELECT   /*
SELECT   FROM   WHERE   ORDER BY   LIMIT 3
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id  =  T2.player_id WHERE T2.hand  =  'L' AND T1.tourney_name  =  'WTA Championships'
SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT winner_id FROM matches ORDER BY winner_rank_points DESC LIMIT 1);
SELECT first_name, country_code, birth_date FROM players WHERE player_id IN (SELECT winner_id FROM matches ORDER BY winner_rank_points DESC LIMIT 1)
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT hand, COUNT(*) FROM players GROUP BY hand
SELECT count(*) FROM ship WHERE disposition_of_ship = "Captured";
SELECT name, tonnage FROM ship ORDER BY name DESC
SELECT name,  date,  result FROM battle
SELECT max(killed + injured),  min(killed + injured) FROM death
SELECT avg(injured) FROM death
SELECT T1.killed,  T1.injured FROM death AS T1 JOIN ship AS T2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
SELECT name,  result FROM battle WHERE bulgarian_commander!= "Boril"
SELECT   FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
SELECT T1.id,  T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id HAVING sum(T2.killed)  >  10
SELECT T1.id,  T1.name FROM ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T1.id ORDER BY SUM(T2.injured) DESC LIMIT 1
SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id WHERE T2.bulgarian_commander  =  'Kaloyan' INTERSECT SELECT DISTINCT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id WHERE T2.latin_commander  =  'Baldwin I' 
SELECT count(DISTINCT result) FROM battle
SELECT count(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM ship WHERE tonnage = '225') 
SELECT name, date FROM battle WHERE id IN (SELECT lost_in_battle FROM ship WHERE name = 'Lettice' INTERSECT SELECT lost_in_battle FROM ship WHERE name = 'HMS Atalanta') 
SELECT name, result, bulgarian_commander FROM battle WHERE NOT id IN (SELECT lost_in_battle FROM ship WHERE location = 'English Channel') 
SELECT note FROM death WHERE note LIKE "%East%"
SELECT line_1,  line_2 FROM Addresses
SELECT line_1,  line_2 FROM Addresses
SELECT count(*) FROM Courses
SELECT count(*) FROM Courses
SELECT course_description FROM Courses WHERE course_name = "Math"
SELECT course_description FROM Courses WHERE course_name LIKE "%math%"
SELECT 
SELECT 
SELECT T1.department_name,  T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.department_name,  T1.department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
SELECT COUNT(DISTINCT department_name) FROM degree_programs
SELECT count(DISTINCT department_name) FROM Departments
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
SELECT count(*) FROM degree_programs AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  "Engineering"
SELECT count(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = "Engineering")
SELECT T1.section_name,  T1.section_description FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id
SELECT T1.section_name,  T1.section_description FROM Sections AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id
SELECT T1.course_name, T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
SELECT T1.course_name,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <  2
SELECT section_name FROM Sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT T1.semester_name,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.semester_name,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC
SELECT 
SELECT 
SELECT T1.first_name,  T1.middle_name,  T1.last_name,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  =  2
SELECT T1.student_id,  T1.first_name,  T1.middle_name,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id JOIN Semesters AS T4 ON T2.semester_id  =  T4.semester_id GROUP BY T1.student_id HAVING COUNT(*)  =  2 
SELECT T3.first_name,  T3.middle_name,  T3.last_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id WHERE T1.degree_summary_name  =  "Bachelor"
SELECT T3.Fname,  T3.Mname,  T3.Lname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID JOIN DEGREE_PROGRAMS AS T4 ON T1.DegreeProgramID  =  T4.DegreeProgramID JOIN COURSES AS T5 ON T1.CourseID  =  T5.CourseID WHERE T4.DegreeSummaryName  =  'Bachelors'
SELECT degree_summary_name, COUNT(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
SELECT T1.degree_program_id,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.degree_program_id,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.student_id,  T1.first_name,  T1.middle_name,  T1.last_name,  count(*),  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.first_name,  T1.middle_name,  T1.last_name,  T1.student_id,  count(*) FROM Student_Enrolment AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_enrolment_id  =  T2.student_enrolment_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1 
SELECT T1.semester_name FROM Semesters AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.semester_id IS NULL
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment)
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T3.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id  =  T3.student_id WHERE T2.state_province_county  =  'North Carolina' EXCEPT SELECT T3.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id JOIN Student_Enrolment AS T3 ON T1.student_id  =  T3.student_id
SELECT last_name FROM Student WHERE city = 'North Carolina' AND student_id NOT IN (SELECT student_id FROM Student_Enrolment)
SELECT T1.transcript_date,  T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
SELECT Transcript_Contents.transcript_id,  Transcript_Contents.student_course_id FROM Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING COUNT(*)  >=  2
SELECT customer_phone FROM Customers WHERE customer_first_name  =  "Timmothy" AND customer_last_name  =  "Ward"
SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmothy Ward? */ SELECT   /* Answer the following: What is the mobile phone number of the student named Timmo
SELECT first_name,  middle_name,  last_name FROM Students ORDER BY student_id ASC LIMIT 1
SELECT first_name, middle_name, last_name FROM Students ORDER BY student_id LIMIT 1
SELECT stu_fname,  stu_mname,  stu_lname FROM student ORDER BY stu_dob ASC LIMIT 1
SELECT stu_fname,  stu_mname,  stu_lname FROM student ORDER BY stu_grad_date ASC LIMIT 1
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T1.current_address_id  <>  T2.address_id
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id JOIN Addresses AS T3 ON T1.permanent_address_id  =  T3.address_id WHERE T2.line_1  <>  T3.line_1
SELECT address_id, line_1, line_2, line_3, city, zip_postcode, state_province_county, country, other_address_details FROM Addresses WHERE address_id IN (SELECT current_address_id FROM Students GROUP BY current_address_id ORDER BY count(*) DESC LIMIT 1)
SELECT address_id, line_1, line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY address_id ORDER BY count(*) DESC LIMIT 1 
SELECT avg(transcript_date) FROM Transcripts
SELECT avg(transcript_date) FROM Transcripts
SELECT transcript_date,  other_details FROM Transcripts ORDER BY transcript_date LIMIT 1
SELECT min(T1.transcript_date),  T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id  =  T2.transcript_id
SELECT count(*) FROM Transcripts
SELECT count(*) FROM Transcripts
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
SELECT COUNT(*),  T1.student_course_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.student_course_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*),  T1.student_course_id FROM Transcript_Contents AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.student_course_id  =  T2.student_course_id GROUP BY T1.student_course_id ORDER BY COUNT(*) DESC LIMIT 1 
SELECT transcript_date,  transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1
SELECT transcript_date,  transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY count(*) ASC LIMIT 1
SELECT T1.semester_name FROM Semester AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.degree_program_id  =  (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name  =  'Master') INTERSECT SELECT T1.semester_name FROM Semester AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id WHERE T2.degree_program_id  =  (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name  =  'Bachelor')
SELECT T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T2.degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Masters') AND T2.degree_program_id IN (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelors')
SELECT COUNT(DISTINCT current_address_id) FROM Students
SELECT DISTINCT T1.line_1, T1.line_2, T1.line_3, T1.city, T1.zip_postcode, T1.state_province_county, T1.country, T1.other_address_details FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id
SELECT * FROM Students ORDER BY last_name DESC, first_name DESC, middle_name DESC
SELECT   FROM   WHERE   ORDER BY   DESC
SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following: Describe the section h. */ SELECT   /* Answer the following:
SELECT section_description FROM Sections WHERE section_name = "h";
SELECT T1.Fname FROM STUDENT AS T1 JOIN ADDRESSES AS T2 ON T1.Permanent_Address_ID = T2.ADDRESS_ID WHERE T2.Country = 'Haiti' OR T1.Cell_Mobile_Number = '09700166582'
SELECT T1.first_name FROM Student AS T1 JOIN Addresses AS T2 ON T1.student_id = T2.student_id WHERE T2.country = "Haiti" OR T1.cell_mobile_number = "09700166582"
SELECT Title FROM Cartoon ORDER BY Title
SELECT Title FROM Cartoon ORDER BY Title
SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.Directed_by  =  "Ben Jones"
SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.Directed_by  =  "Ben Jones"
SELECT 
SELECT COUNT(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr" 
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT Title,  Directed_by FROM Cartoon ORDER BY Original_air_date
SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.Directed_by  =  "Ben Jones" OR T2.Directed_by  =  "Brandon Vietti"
SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti" 
SELECT Country,  COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1
SELECT Country,  COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1
SELECT count(DISTINCT series_name),  count(DISTINCT Content) FROM TV_Channel
SELECT count(DISTINCT series_name), count(DISTINCT Content) FROM TV_Channel
SELECT Content FROM TV_Channel WHERE series_name  =  "Sky Radio"
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio"
SELECT 
SELECT 
SELECT COUNT(*) FROM TV_Channel WHERE Language = "English";
SELECT count(*) FROM TV_Channel WHERE Language  =  "English"
SELECT Language,  count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1
SELECT Language, COUNT(*) as Channel_Count FROM TV_Channel GROUP BY Language ORDER BY Channel_Count ASC LIMIT 1; 
SELECT Language,  COUNT(*) FROM TV_Channel GROUP BY Language
SELECT Language,  COUNT(*) FROM TV_Channel GROUP BY Language
SELECT 
SELECT 
SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  "Sky Radio"
SELECT 
SELECT Episode FROM TV_series ORDER BY Rating
SELECT Episode FROM TV_series ORDER BY Rating
SELECT T1.Episode,  T1.Rating FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id ORDER BY T1.Rating DESC LIMIT 3
SELECT Episode, Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
SELECT min(Share),  max(Share) FROM TV_series
SELECT max(Share),  min(Share) FROM TV_series
SELECT Air_Date FROM TV_series WHERE Episode  =  "A Love of a Lifetime"
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime"
SELECT 
SELECT T1.Weekly_Rank FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Episode  =  "A Love of a Lifetime"
SELECT T1.Channel,  T1.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Episode  =  "A Love of a Lifetime"
SELECT T1.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Episode  =  "A Love of a Lifetime"
SELECT T1.Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T2.series_name  =  "Sky Radio"
SELECT Episode FROM TV_series WHERE series_name  =  "Sky Radio"
SELECT directed_by,  count(*) FROM Cartoon GROUP BY directed_by
SELECT Directed_by,  COUNT(*) FROM Cartoon GROUP BY Directed_by
SELECT production_code,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT production_code,  Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1
SELECT T1.Package_Option,  T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T1.Hight_definition_TV  =  'Yes'
SELECT T1.Package_Option,  T2.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T1.Hight_definition_TV  =  'Yes'
SELECT DISTINCT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  "Todd Casey"
SELECT T1.Country FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel  =  T2.id WHERE T1.Written_by  =  "Todd Casey"
SELECT T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Written_by  =  "Todd Casey"
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = "Todd Casey") 
SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = "Ben Jones" INTERSECT SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = "Michael Chang"
SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  "Ben Jones" INTERSECT SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.Directed_by  =  "Michael Chang"
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language!= "English"
SELECT Pixel_aspect_ratio_PAR,  Country FROM TV_Channel WHERE Language <> 'English'
SELECT T1.id FROM TV_Channel AS T1 JOIN TV_Channel AS T2 ON T1.Country  =  T2.Country GROUP BY T1.id HAVING COUNT(*)  >  2
SELECT id FROM TV_Channel GROUP BY id HAVING count(*)  >  2
SELECT id FROM TV_Channel EXCEPT SELECT Channel FROM Cartoon WHERE Directed_by  =  "Ben Jones"
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones')
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by  =  'Ben Jones')
SELECT count(*) FROM poker_player
SELECT count(*) FROM poker_player
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Earnings FROM poker_player ORDER BY Earnings DESC
SELECT Final_Table_Made,  Best_Finish FROM poker_player
SELECT Final_Table_Made,  Best_Finish FROM poker_player
SELECT avg(Earnings) FROM poker_player
SELECT avg(Earnings) FROM poker_player
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Earnings  >  300000
SELECT Name FROM poker_player ORDER BY Final_Table_Made ASC
SELECT Name FROM poker_player ORDER BY Final_Table_Made
SELECT Birth_Date FROM poker_player ORDER BY Earnings ASC LIMIT 1
SELECT Birth_Date FROM poker_player ORDER BY Earnings LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
SELECT Money_Rank FROM poker_player ORDER BY Height DESC LIMIT 1
SELECT avg(T1.Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200
SELECT avg(Earnings) FROM poker_player WHERE Height > 200
SELECT Name FROM poker_player ORDER BY Earnings DESC
SELECT Name FROM poker_player ORDER BY Earnings DESC
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality
SELECT Nationality,  count(*) FROM people GROUP BY Nationality
SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
SELECT Nationality FROM people GROUP BY Nationality HAVING count(*)  >=  2
SELECT Name, Birth_Date FROM people ORDER BY Name ASC
SELECT Name, Birth_Date FROM people ORDER BY Name
SELECT Name FROM people WHERE Nationality!= "Russia"
SELECT Name FROM people WHERE Nationality!= "Russia"
SELECT Name FROM people WHERE NOT People_ID IN (SELECT People_ID FROM poker_player);
SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
SELECT 
SELECT count(DISTINCT Nationality) FROM people
SELECT count(*) FROM AREA_CODE_STATE
SELECT contestant_number,  contestant_name FROM contestants ORDER BY contestant_name DESC
SELECT vote_id,  phone_number,  state FROM VOTES
SELECT max(area_code),  min(area_code) FROM AREA_CODE_STATE
SELECT max(created) FROM VOTES WHERE state = 'CA'
SELECT contestant_name FROM contestants WHERE contestant_name!= 'Jessie Alloway'
SELECT DISTINCT state, created FROM VOTES
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(*) >= 2)
SELECT contestant_number, contestant_name FROM contestants ORDER BY votes LIMIT 1
SELECT count(*) FROM VOTES WHERE state  =  'NY' OR state  =  'CA'
SELECT count(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
SELECT state FROM VOTES GROUP BY state ORDER BY count(*) DESC LIMIT 1
SELECT T1.created,  T1.state,  T1.phone_number FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.contestant_name  =  'Tabatha Gehling'
SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T1.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T2.contestant_name  =  'Kelly Clauss'
SELECT contestant_name FROM contestants WHERE contestant_name LIKE '%Al%'
SELECT Name FROM country WHERE IndepYear > 1950
SELECT Name FROM country WHERE IndepYear > 1950
SELECT count(*) FROM country WHERE GovernmentForm = "Republic"
SELECT count(*) FROM country WHERE GovernmentForm = 'Republic'
SELECT sum(SurfaceArea) FROM country WHERE Region = "Caribbean"
SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Carribean"
SELECT 
SELECT 
SELECT 
SELECT 
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Name  =  'Aruba' ORDER BY T1.Percentage DESC LIMIT 1
SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  'Aruba' AND T2.IsOfficial  =  'T'
SELECT Population,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
SELECT Population, LifeExpectancy FROM country WHERE Code = 'BRA'
SELECT 
SELECT Region, Population FROM country WHERE Name = "Angola";
SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1
SELECT sum(Population),  max(GNP) FROM country WHERE Continent  =  'Asia'
SELECT COUNT(*), MAX(GNP) FROM country WHERE Continent = "Asia"
SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
SELECT avg(LifeExpectancy) FROM country WHERE Continent = "Africa" AND GovernmentForm = "Republic"
SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'
SELECT sum(SurfaceArea) FROM country WHERE Continent  =  'Asia' OR Continent  =  'Europe'
SELECT count(*) FROM city WHERE District = "Gelderland"
SELECT 
SELECT avg(GNP),  sum(Population) FROM country WHERE GovernmentForm  =  "US Territory"
SELECT avg(GNP), sum(Population) FROM country WHERE Code IN ('USA', 'UMI', 'VIR', 'PRK', 'PSE', 'GUM')
SELECT COUNT(DISTINCT Language) FROM countrylanguage
SELECT 
SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa'
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = "Africa"
SELECT 
SELECT count(*) FROM countrylanguage WHERE CountryCode = 'ABW'
SELECT count(*) FROM countrylanguage WHERE CountryCode  =  "AFG" AND IsOfficial  =  "T"
SELECT count(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T'
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY count(*) DESC LIMIT 1)
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY count(*) DESC LIMIT 1) 
SELECT Continent, COUNT(DISTINCT Language) FROM countrylanguage GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1
SELECT Continent, COUNT(*) FROM countrylanguage GROUP BY Continent ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' INTERSECT SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'
SELECT COUNT(*) FROM countrylanguage WHERE Language IN ("English", "Dutch") AND IsOfficial = "T"
SELECT   Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'French'
SELECT Name FROM countrylanguage WHERE Language = 'English' INTERSECT SELECT Name FROM countrylanguage WHERE Language = 'French'
SELECT Name FROM countrylanguage WHERE Language = "English" INTERSECT SELECT Name FROM countrylanguage WHERE Language = "French";
SELECT 
SELECT COUNT(DISTINCT Continent) FROM countrylanguage WHERE Language = 'Chinese'
SELECT count(DISTINCT Continent) FROM countrylanguage WHERE Language = "Chinese";
SELECT Region FROM countrylanguage WHERE Language = "English" OR Language = "Dutch"
SELECT Region FROM countrylanguage WHERE Language = "Dutch" OR Language = "English"
SELECT Name FROM countrylanguage WHERE Language = "English" OR Language = "Dutch" AND IsOfficial = "T"
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' UNION SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch')
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Continent  =  'Asia' GROUP BY T1.Language ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.Continent  =  "Asia" GROUP BY T1.Language ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.GovernmentForm  =  "Republic" GROUP BY T1.Language HAVING count(*)  =  1
SELECT T1.Language FROM countrylanguage AS T1 JOIN country AS T2 ON T1.CountryCode  =  T2.Code WHERE T2.GovernmentForm  =  "Republic" GROUP BY T1.Language HAVING COUNT(*)  =  1
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1
SELECT T1.Name, T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T' ORDER BY T1.Population DESC LIMIT 1
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1; 
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1; 
SELECT avg(LifeExpectancy) FROM country WHERE NOT Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')
SELECT avg(LifeExpectancy) FROM country WHERE NOT Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = "English" AND IsOfficial = "T")
SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T1.Language  <>  'English'
SELECT count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T'
SELECT 
SELECT T1.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE IndepYear < 1930) AND IsOfficial = 'T'
SELECT count(distinct language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930) AND isofficial = 'T'
SELECT T1.Name FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Europe" AND T1.SurfaceArea  >  (SELECT max(T1.SurfaceArea) FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Europe")
SELECT Name, SurfaceArea FROM country WHERE SurfaceArea > (SELECT max(SurfaceArea) FROM country WHERE Continent = "Europe")
SELECT Name FROM country WHERE Continent = "Africa" AND Population < (SELECT MIN(Population) FROM country WHERE Continent = "Asia")
SELECT Name, Population FROM country WHERE Continent = "Africa" AND Population < (SELECT MIN(Population) FROM country WHERE Continent = "Asia")
SELECT Name FROM country WHERE Continent = "Asia" AND Population > (SELECT max(Population) FROM country WHERE Continent = "Africa")
SELECT T1.Name FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" AND T2.Population  >  (SELECT MAX(Population) FROM city WHERE Continent  =  "Africa")
SELECT Code FROM country WHERE NOT Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language!= "English"
SELECT DISTINCT T1.Code FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language !=  "English"
SELECT Code FROM country WHERE Language!= 'English' AND GovernmentForm!= 'Republic'
SELECT Code FROM country WHERE GovernmentForm!= 'Republic' AND Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')
SELECT T1.Name FROM CITY AS T1 JOIN COUNTRYLANGUAGE AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = "English" AND T2.IsOfficial = "T" AND T1.Continent = "Europe"
SELECT Name FROM city WHERE NOT Name IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' AND T2.IsOfficial  =  'T') AND Continent  =  'Europe'
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = "Chinese" AND countrylanguage.IsOfficial = "T" AND country.Continent = "Asia"
SELECT DISTINCT Name FROM city WHERE Continent = 'Asia' AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese' AND IsOfficial = 'T')
SELECT Name, IndepYear, SurfaceArea FROM Country ORDER BY Population ASC LIMIT 1
SELECT Name, IndepYear, SurfaceArea FROM Country ORDER BY Population LIMIT 1
SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following: What are the names and population of the countries with the largest population? */ SELECT   /* Answer the following:
SELECT Name, Population, HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
SELECT T1.Name, COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) >= 3 
SELECT Name, (SELECT count(*) FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code) as Languages FROM country WHERE Languages > 2; 
SELECT count(*),  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
SELECT district, count(*) FROM city WHERE population > (SELECT avg(population) FROM city) GROUP BY district
SELECT GovernmentForm, SUM(Population) FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72
SELECT GovernmentForm, sum(Population) FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72
SELECT continent, avg(lifeExpectancy), sum(population) FROM country GROUP BY continent HAVING avg(lifeExpectancy) < 72
SELECT Continent, SUM(Population), AVG(LifeExpectancy) FROM country GROUP BY Continent HAVING AVG(LifeExpectancy) < 72;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population DESC LIMIT 3
SELECT Name FROM country ORDER BY Population LIMIT 3
SELECT Name FROM country ORDER BY Population ASC LIMIT 3
SELECT count(*) FROM country WHERE Continent = 'Asia'
SELECT count(*) FROM country WHERE Continent  =  "Asia"
SELECT Name FROM country WHERE Continent = "Europe" AND Population = 80000
SELECT Name FROM country WHERE Continent = "Europe" AND Population = 80000
SELECT sum(Population),  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000
SELECT sum(Population),  avg(SurfaceArea) FROM country WHERE Continent  =  "North America" AND SurfaceArea  >  3000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000
SELECT Language, COUNT(*) as num_countries FROM countrylanguage GROUP BY Language ORDER BY num_countries DESC LIMIT 1; 
SELECT T1.Language,  count(*) FROM countrylanguage AS T1 GROUP BY T1.Language ORDER BY count(*) DESC LIMIT 1
SELECT c.Name, cl.Language, cl.Percentage FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Percentage = (SELECT MAX(cl2.Percentage) FROM countrylanguage cl2 WHERE cl2.CountryCode = cl.CountryCode) 
SELECT T1.Code, T2.Language, T2.Percentage FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Code ORDER BY T2.Percentage DESC LIMIT 1 
SELECT COUNT(*) FROM countrylanguage WHERE Language = "Spanish" AND IsOfficial = "T" 
SELECT count(*) FROM countrylanguage WHERE Language  =  "Spanish" AND IsOfficial  =  "T"
SELECT Code  FROM countrylanguage  WHERE Language = 'Spanish'  GROUP BY Code  ORDER BY AVG(Percentage) DESC  LIMIT 1; 
SELECT Code FROM countrylanguage WHERE Language = "Spanish" GROUP BY Code HAVING COUNT(*) >= ALL (SELECT COUNT(*) FROM countrylanguage WHERE Language = "Spanish" GROUP BY Code)
SELECT count(*) FROM conductor
SELECT count(*) FROM conductor
SELECT Name FROM conductor ORDER BY Age ASC
SELECT Name FROM conductor ORDER BY Age
SELECT Name FROM conductor WHERE Nationality!= "USA"
SELECT Name FROM conductor WHERE Nationality!= "USA"
SELECT   FROM   WHERE   GROUP BY   ORDER BY   DESC
SELECT   FROM   WHERE   ORDER BY   DESC
SELECT avg(Attendance) FROM show
SELECT avg(Attendance) FROM show
SELECT max(Share),  min(Share) FROM performance WHERE Type!= "Live final"
SELECT max(Share),  min(Share) FROM performance WHERE Type!= "Live final"
SELECT count(DISTINCT Nationality) FROM conductor
SELECT count(DISTINCT Nationality) FROM conductor
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
SELECT 
SELECT T2.Name,  T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
SELECT T2.Name,  T1.Orchestra FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
SELECT T2.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Name HAVING COUNT(*)  >  1
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*)  >  1
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008
SELECT Record_Company,  COUNT(*) FROM orchestra GROUP BY Record_Company
SELECT Record_Company,  count(*) FROM orchestra GROUP BY Record_Company
SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
SELECT 
SELECT T1.Record_Company FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T1.Record_Company ORDER BY COUNT(*) DESC LIMIT 1
SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
SELECT 
SELECT T1.Record_Company FROM orchestra AS T1 JOIN orchestra AS T2 ON T1.Record_Company  =  T2.Record_Company WHERE T1.Year_of_Founded  <  2003 INTERSECT SELECT T1.Record_Company FROM orchestra AS T1 JOIN orchestra AS T2 ON T1.Record_Company  =  T2.Record_Company WHERE T1.Year_of_Founded  >  2003
SELECT   FROM   WHERE   INTERSECT   SELECT   FROM   WHERE 
SELECT count(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
SELECT 
SELECT T1.Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Year_of_Founded HAVING COUNT(*) > 1
SELECT Year_of_Founded FROM orchestra GROUP BY Year_of_Founded HAVING COUNT(*)  >  1
SELECT count(*) FROM Highschooler
SELECT count(*) FROM Highschooler
SELECT name,  grade FROM Highschooler
SELECT name,  grade FROM Highschooler
SELECT 
SELECT 
SELECT grade FROM Highschooler WHERE name = "Kyle";
SELECT grade FROM Highschooler WHERE name = "Kyle"
SELECT name FROM Highschooler WHERE grade = 10
SELECT name FROM Highschooler WHERE grade = 10
SELECT ID FROM Highschooler WHERE name = "Kyle"
SELECT ID FROM Highschooler WHERE name = "Kyle";
SELECT count(*) FROM Highschooler WHERE grade IN (9,10)
SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
SELECT grade,  count(*) FROM Highschooler GROUP BY grade
SELECT grade,  count(*) FROM Highschooler GROUP BY grade
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
SELECT 
SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
SELECT student_id, COUNT(*) FROM Friend GROUP BY student_id
SELECT student_id, COUNT(*) FROM Friend GROUP BY student_id
SELECT name,  count(*) FROM Friend GROUP BY student_id
SELECT name, count(*) FROM Highschooler JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY name
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING count(*) >= 3)
SELECT name FROM Highschooler WHERE ID IN (SELECT friend_id FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = "Kyle"))
SELECT name FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = "Kyle")
SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = "Kyle")
SELECT count(*) FROM Friend WHERE student_id =  (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend) AND ID IN (SELECT liked_id FROM Likes) 
SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID  =  T2.student_id INTERSECT SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID  =  T2.student_id
SELECT student_id,  count(*) FROM Likes GROUP BY student_id
SELECT student_id,  count(*) FROM Likes GROUP BY student_id
SELECT name, count(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY name
SELECT name, count(*) FROM Highschooler JOIN Likes ON Highschooler.ID = Likes.student_id GROUP BY name; 
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)
SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2)
SELECT name  FROM Highschooler  WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING COUNT(*) >= 2) 
SELECT name  FROM Highschooler  WHERE grade > 5  AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 2) 
SELECT name FROM Highschooler WHERE grade > 5 AND ID IN (SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 2) 
SELECT count(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM Likes WHERE student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle')
SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend)
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend)
SELECT T1.state FROM owners AS T1 JOIN professionals AS T2 ON T1.state  =  T2.state GROUP BY T1.state HAVING COUNT(*)  >  1
SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT avg(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = "Indiana" OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2)
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)
SELECT name FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments WHERE cost_of_treatment  >  1000)
SELECT name FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments WHERE cost_of_treatment  <=  1000)
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or abandoned? */ SELECT breed_name FROM Breeds  /* Answer the following: What are the names of breeds that are used by dogs that are not adopted or
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners  /* Answer the following: Find the first names of all dogs that are not adopted. */ SELECT first_name FROM Dogs WHERE date_adopted IS NULL  /* Answer the following: Find the first names of all dogs that are not abandoned. */ SELECT first_name FROM Dogs WHERE abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults. */ SELECT first_name FROM Dogs WHERE age <> 'Adult'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult' AND abandoned_yn = 'N'  /* Answer the following: Find the first names of all dogs that are not adults and are not abandoned. */ SELECT first_name FROM Dogs WHERE age <> 'Adult'
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT professional_id, role_code, email_address FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT owner_id, first_name, last_name FROM Owners ORDER BY COUNT(*) DESC LIMIT 1
SELECT owner_id, first_name, last_name FROM owners ORDER BY count(*) DESC LIMIT 1
SELECT T1.professional_id,  T1.role_code,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id ORDER BY count(*) DESC LIMIT 1
SELECT professional_id, role_code, first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY professional_id HAVING count(*) >= 2
SELECT breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY breed_name ORDER BY count(*) DESC LIMIT 1
SELECT breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.owner_id,  T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
SELECT T1.owner_id,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_description ORDER BY sum(T2.cost_of_treatment) LIMIT 1
SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1
SELECT owner_id, zip_code FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY owner_id ORDER BY SUM(cost_of_treatment) DESC LIMIT 1
SELECT T1.owner_id,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY sum(T2.weight) DESC LIMIT 1
SELECT T1.professional_id,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING COUNT(DISTINCT T2.treatment_type_code)  >=  2
SELECT professional_id,  cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING count(*)  >=  2)
SELECT first_name, last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments));
SELECT first_name, last_name FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments))
SELECT T1.date_of_treatment,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
SELECT T1.Date_of_treatment,  T2.First_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.Professional_id  =  T2.Professional_id
SELECT cost_of_treatment,  treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
SELECT T3.cost_of_treatment,  T2.treatment_type_description FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id  =  T2.dog_id JOIN Treatment_Types AS T3 ON T1.treatment_type_code  =  T3.treatment_type_code
SELECT T1.first_name,  T1.last_name,  T2.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
SELECT T1.first_name,  T1.last_name,  T2.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
SELECT T1.first_name,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
SELECT T1.first_name,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id
SELECT name, date_of_treatment FROM Dogs AS t1 JOIN Treatments AS t2 ON t1.dog_id = t2.dog_id WHERE breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)
SELECT name, date_of_treatment FROM Dogs AS t1 JOIN Treatments AS t2 ON t1.dog_id  =  t2.dog_id WHERE breed_code  =  (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1)
SELECT first_name, name FROM Dogs AS t1 JOIN Owners AS t2 ON t1.owner_id  =  t2.owner_id WHERE t2.state  =  'Virginia'
SELECT T1.first_name,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
SELECT   /* Answer the following: What are the names of the dogs who have gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through a treatment? */ SELECT   /* Answer the following: What are the names of the dogs who have not gone through
SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT   /* Answer the following: Find the name of the dogs that received a treatment. */ SELECT  
SELECT last_name FROM owners WHERE dog_id = (SELECT dog_id FROM dogs ORDER BY age ASC LIMIT 1)
SELECT last_name FROM owners WHERE dog_id = (SELECT dog_id FROM dogs ORDER BY age ASC LIMIT 1);
SELECT professional_email_address FROM Professionals WHERE professional_state = "Hawaii" OR professional_state = "Wisconsin"
SELECT email_address FROM Professionals WHERE state = "Hawaii" OR state = "Wisconsin"
SELECT   FROM   WHERE   ;
SELECT date_of_birth,  date_departed FROM Dogs
SELECT COUNT(*) FROM Treatments
SELECT count(*) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT COUNT(DISTINCT professional_id) FROM Treatments
SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%';
SELECT T1.role_code,  T1.street,  T1.city,  T1.state FROM Professionals AS T1 JOIN Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.city LIKE '%West%'
SELECT first_name, last_name, email_address FROM owners WHERE state LIKE '%North%';
SELECT 
SELECT count(*) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs)
SELECT count(*) FROM dogs WHERE age  <  (SELECT avg(age) FROM dogs)
SELECT cost_of_treatment FROM Treatments WHERE treatment_id = (SELECT treatment_id FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1)
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments)
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT count(*) FROM Owners WHERE owner_id NOT IN (SELECT owner_id FROM Dogs)
SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
SELECT count(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)
SELECT 
SELECT name,  age,  weight FROM Dogs WHERE abandoned_yn  =  1
SELECT avg(age) FROM Dogs
SELECT avg(age) FROM dogs
SELECT max(age) FROM Dogs
SELECT max(age) FROM Dogs
SELECT charge_type,  charge_amount FROM Charges
SELECT charge_type,  charge_amount FROM Charges
SELECT charge_amount FROM Charges WHERE charge_type = (SELECT charge_type FROM Charges ORDER BY charge_amount DESC LIMIT 1);
SELECT charge_amount FROM Charges WHERE charge_type = (SELECT charge_type FROM Charges ORDER BY charge_amount DESC LIMIT 1)
SELECT professional_id,  email_address,  cell_number,  home_phone FROM Professionals
SELECT professional_id,  email_address,  cell_number,  home_phone FROM Professionals
SELECT breed_code, size_code FROM Dogs
SELECT DISTINCT breed_code, size_code FROM Dogs
SELECT T2.first_name, T3.treatment_type_description FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_Types AS T3 ON T2.treatment_type_code = T3.treatment_type_code
SELECT T2.first_name,  T3.treatment_type_description FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_Types AS T3 ON T1.treatment_type_code  =  T3.treatment_type_code
SELECT count(*) FROM singer
SELECT count(*) FROM singer
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
SELECT Name FROM singer ORDER BY Net_Worth_Millions
SELECT Birth_Year,  Citizenship FROM singer
SELECT Birth_Year,  Citizenship FROM singer
SELECT Name FROM singer WHERE Citizenship!= "France"
SELECT Name FROM singer WHERE Citizenship!= "French"
SELECT 
SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
SELECT Citizenship,  COUNT(*) FROM singer GROUP BY Citizenship
SELECT Citizenship,  COUNT(*) FROM singer GROUP BY Citizenship
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship 
SELECT Citizenship, max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
SELECT T1.Title,  T2.Name FROM song AS T1 JOIN singer AS T2 ON T1.Singer_ID  =  T2.Singer_ID
SELECT Title,  Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID
SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
SELECT DISTINCT Name FROM singer WHERE Sales > 300000
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Singer_ID HAVING COUNT(*)  >  1
SELECT T1.Name,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
SELECT T1.Name,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
SELECT Name FROM Singer WHERE NOT Singer_ID IN (SELECT Singer_ID FROM Song);
SELECT s.Name FROM singer s WHERE s.Singer_ID NOT IN (SELECT Singer_ID FROM song)
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
SELECT count(*) FROM Other_Available_Features
SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = "AirCon";
SELECT T1.property_type_code,  T1.property_type_description FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code
SELECT property_name FROM Properties WHERE property_type_code = 'House' OR property_type_code = 'Apartment' AND room_count > 1
